package com.orion.generator.bank;

import java.util.Collections;
import java.util.LinkedHashMap;
import java.util.Map;

/**
 * @author Jiahang Li
 * @version 1.0.0
 * @since 2021/8/9 18:54
 */
public enum BankNameType {

    /**
     * 中国工商银行
     */
    ICBC("中国工商银行", "ICBC", new LinkedHashMap<String, Integer>() {{
        put("370246", 15);
        put("370248", 15);
        put("370249", 15);
        put("620406", 18);
        put("620407", 18);
        put("620409", 18);
        put("620410", 18);
        put("620411", 18);
        put("620412", 18);
        put("620502", 18);
        put("620503", 18);
        put("620405", 18);
        put("620408", 18);
        put("620512", 18);
        put("620602", 18);
        put("620604", 18);
        put("620607", 18);
        put("620611", 18);
        put("620612", 18);
        put("620704", 18);
        put("620706", 18);
        put("620707", 18);
        put("620708", 18);
        put("620709", 18);
        put("620710", 18);
        put("620609", 18);
        put("620712", 18);
        put("620713", 18);
        put("620714", 18);
        put("620802", 18);
        put("620711", 18);
        put("620904", 18);
        put("620905", 18);
        put("621001", 18);
        put("620902", 18);
        put("621103", 18);
        put("621105", 18);
        put("621106", 18);
        put("621107", 18);
        put("621102", 18);
        put("621203", 18);
        put("621204", 18);
        put("621205", 18);
        put("621206", 18);
        put("621207", 18);
        put("621208", 18);
        put("621209", 18);
        put("621210", 18);
        put("621302", 18);
        put("621303", 18);
        put("621202", 18);
        put("621305", 18);
        put("621306", 18);
        put("621307", 18);
        put("621309", 18);
        put("621311", 18);
        put("621313", 18);
        put("621211", 18);
        put("621315", 18);
        put("621304", 18);
        put("621402", 18);
        put("621404", 18);
        put("621405", 18);
        put("621406", 18);
        put("621407", 18);
        put("621408", 18);
        put("621409", 18);
        put("621410", 18);
        put("621502", 18);
        put("621317", 18);
        put("621511", 18);
        put("621602", 18);
        put("621603", 18);
        put("621604", 18);
        put("621605", 18);
        put("621608", 18);
        put("621609", 18);
        put("621610", 18);
        put("621611", 18);
        put("621612", 18);
        put("621613", 18);
        put("621614", 18);
        put("621615", 18);
        put("621616", 18);
        put("621617", 18);
        put("621607", 18);
        put("621606", 18);
        put("621804", 18);
        put("621807", 18);
        put("621813", 18);
        put("621814", 18);
        put("621817", 18);
        put("621901", 18);
        put("621904", 18);
        put("621905", 18);
        put("621906", 18);
        put("621907", 18);
        put("621908", 18);
        put("621909", 18);
        put("621910", 18);
        put("621911", 18);
        put("621912", 18);
        put("621913", 18);
        put("621915", 18);
        put("622002", 18);
        put("621903", 18);
        put("622004", 18);
        put("622005", 18);
        put("622006", 18);
        put("622007", 18);
        put("622008", 18);
        put("622010", 18);
        put("622011", 18);
        put("622012", 18);
        put("621914", 18);
        put("622015", 18);
        put("622016", 18);
        put("622003", 18);
        put("622018", 18);
        put("622019", 18);
        put("622020", 18);
        put("622102", 18);
        put("622103", 18);
        put("622104", 18);
        put("622105", 18);
        put("622013", 18);
        put("622111", 18);
        put("622114", 18);
        put("622200", 19);
        put("622017", 18);
        put("622202", 19);
        put("622203", 19);
        put("622208", 19);
        put("622239", 16);
        put("622224", 16);
        put("622303", 18);
        put("622304", 18);
        put("622305", 18);
        put("622306", 18);
        put("622307", 18);
        put("622308", 18);
        put("622309", 18);
        put("622238", 16);
        put("622314", 18);
        put("622315", 18);
        put("622317", 18);
        put("622302", 18);
        put("622402", 18);
        put("622403", 18);
        put("622404", 18);
        put("622313", 18);
        put("622504", 18);
        put("622505", 18);
        put("622509", 18);
        put("622513", 18);
        put("622517", 18);
        put("622502", 18);
        put("622604", 18);
        put("622605", 18);
        put("622606", 18);
        put("622510", 18);
        put("622703", 18);
        put("622715", 18);
        put("622806", 18);
        put("622902", 18);
        put("622903", 18);
        put("622706", 18);
        put("623002", 18);
        put("623006", 18);
        put("623008", 18);
        put("623011", 18);
        put("623012", 18);
        put("622904", 18);
        put("623015", 18);
        put("623100", 18);
        put("623202", 18);
        put("623301", 18);
        put("623400", 18);
        put("623500", 18);
        put("623602", 18);
        put("623803", 18);
        put("623901", 18);
        put("623014", 18);
        put("624100", 18);
        put("624200", 18);
        put("624301", 18);
        put("624402", 18);
        put("427010", 16);
        put("427019", 16);
        put("370247", 15);
        put("438126", 16);
        put("489734", 16);
        put("489735", 16);
        put("489736", 16);
        put("510529", 16);
        put("620200", 18);
        put("620302", 18);
        put("620402", 18);
        put("620403", 18);
        put("620404", 18);
        put("524047", 16);
        put("622110", 18);
        put("622223", 16);
        put("622229", 16);
        put("622231", 16);
        put("622232", 16);
        put("622233", 16);
        put("622234", 16);
        put("622237", 16);
        put("623700", 18);
        put("628288", 16);
        put("624000", 18);
        put("9558", 19);
        put("628286", 16);
        put("622206", 16);
        put("621225", 19);
        put("620058", 19);
        put("621281", 19);
        put("622246", 16);
        put("900000", 19);
        put("544210", 16);
        put("548943", 16);
        put("370267", 15);
        put("621558", 19);
        put("621559", 19);
        put("621722", 19);
        put("621723", 19);
        put("620086", 19);
        put("621226", 19);
        put("402791", 16);
        put("427028", 16);
        put("427038", 16);
        put("548259", 16);
        put("528856", 16);
        put("621618", 19);
        put("620516", 19);
        put("621227", 19);
        put("621288", 19);
        put("621721", 19);
        put("900010", 19);
        put("625330", 16);
        put("625331", 16);
        put("625332", 16);
        put("623062", 19);
        put("622236", 16);
        put("621670", 19);
        put("524374", 16);
        put("550213", 16);
        put("621376", 16);
        put("620054", 16);
        put("620142", 16);
        put("621423", 16);
        put("621428", 16);
        put("621434", 16);
        put("621761", 16);
        put("621749", 16);
        put("620184", 16);
        put("621300", 16);
        put("621378", 16);
        put("621720", 19);
        put("621379", 19);
        put("620114", 19);
        put("620146", 19);
        put("621724", 16);
        put("621762", 16);
        put("621371", 16);
        put("620143", 19);
        put("620149", 19);
        put("621730", 19);
        put("621414", 16);
        put("621375", 16);
        put("620187", 16);
        put("621734", 16);
        put("621433", 19);
        put("621370", 19);
        put("622926", 19);
        put("622927", 16);
        put("622928", 16);
        put("622929", 16);
        put("622930", 19);
        put("622931", 19);
        put("621733", 19);
        put("621732", 19);
        put("620124", 19);
        put("620183", 19);
        put("621764", 19);
        put("621372", 19);
        put("621464", 16);
        put("621765", 16);
        put("620094", 16);
        put("620186", 19);
        put("621369", 16);
        put("621763", 16);
        put("620046", 16);
        put("621750", 16);
        put("621377", 19);
        put("620148", 19);
        put("620185", 19);
        put("621367", 16);
        put("621374", 16);
        put("621731", 16);
        put("621781", 16);
        put("625017", 16);
        put("625018", 16);
        put("625019", 16);
    }}, new LinkedHashMap<String, Integer>() {{
        put("427018", 16);
        put("427020", 16);
        put("427029", 16);
        put("427030", 16);
        put("427039", 16);
        put("438125", 16);
        put("45806", 16);
        put("451804", 16);
        put("451810", 16);
        put("451811", 16);
        put("458071", 16);
        put("427062", 16);
        put("524091", 16);
        put("427064", 16);
        put("530970", 16);
        put("53098", 16);
        put("530990", 16);
        put("558360", 16);
        put("622210", 16);
        put("622211", 16);
        put("622212", 16);
        put("622213", 16);
        put("622214", 16);
        put("622220", 16);
        put("622225", 16);
        put("625929", 16);
        put("625927", 16);
        put("625930", 16);
        put("625114", 16);
        put("622159", 16);
        put("625021", 16);
        put("625022", 16);
        put("625932", 16);
        put("625931", 16);
        put("625113", 16);
        put("625928", 16);
        put("625914", 16);
        put("625986", 16);
        put("625925", 16);
        put("625921", 16);
        put("625926", 16);
        put("625942", 16);
        put("622158", 16);
        put("625917", 16);
        put("625922", 16);
        put("625933", 16);
        put("625920", 16);
        put("625924", 16);
        put("622215", 16);
        put("622230", 16);
        put("622235", 16);
        put("622240", 16);
        put("622245", 16);
        put("62451804", 16);
        put("62451810", 16);
        put("62451811", 16);
        put("6245806", 16);
        put("62458071", 16);
        put("6253098", 16);
        put("526836", 16);
        put("513685", 16);
        put("543098", 16);
        put("458441", 16);
        put("356879", 16);
        put("356880", 16);
        put("356881", 16);
        put("356882", 16);
        put("625939", 16);
        put("625987", 16);
        put("625915", 16);
        put("625916", 16);
        put("625934", 16);
        put("525498", 16);
    }}),

    /**
     * 交通银行
     */
    COMM("交通银行", "COMM", new LinkedHashMap<String, Integer>() {{

    }}, new LinkedHashMap<String, Integer>() {{

    }}),

    x("中国工商银行", "ICBC", new LinkedHashMap<String, Integer>() {{

    }}, new LinkedHashMap<String, Integer>() {{

    }}),


    ;

    BankNameType(String name, String code, Map<String, Integer> debitPrefix, Map<String, Integer> creditPrefix) {
        this.name = name;
        this.code = code;
        this.debitPrefix = Collections.unmodifiableMap(debitPrefix);
        this.creditPrefix = Collections.unmodifiableMap(creditPrefix);
    }

    /**
     * 银行名称
     */
    private final String name;

    /**
     * 简写
     */
    private final String code;

    /**
     * 借记卡前缀
     * key: 前缀
     * value: 长度
     */
    private final Map<String, Integer> debitPrefix;

    /**
     * 信用卡前缀
     * key: 前缀
     * value: 长度
     */
    private final Map<String, Integer> creditPrefix;

    public String getName() {
        return name;
    }

    public String getCode() {
        return code;
    }

    public Map<String, Integer> getDebitPrefix() {
        return debitPrefix;
    }

    public Map<String, Integer> getCreditPrefix() {
        return creditPrefix;
    }

}
